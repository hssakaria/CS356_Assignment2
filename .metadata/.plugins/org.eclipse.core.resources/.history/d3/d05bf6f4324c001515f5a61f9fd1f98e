import java.text.DecimalFormat;
import java.text.NumberFormat;

public class AdminVisitor implements TwitterVisitors {


	private int totalUsers;
	private int totalGroupUsers;

	private int totalMessages;
	private String[] positivewords = {"hello","great","good","wonderful","joy", "Marvelous","Trust","Well"}; 
	private double 	totalPositivePercent;
	private int totalPossitiveMessages=0;
	NumberFormat formatter = new DecimalFormat("#0.00"); 
	@Override
	public void userVisitor(User user) {
		totalUsers++;

	}

	@Override
	public void groupVisitor(GroupUser groupUser) {
		totalGroupUsers++;
	}

	/**********************************************
	 * check if message contains positive words
	 * @param msg
	 ***********************************************/
	public void setTotalMessages(String msg){

		totalMessages++;
		// first convert to lowercase and then compare each word with
		// positivewords arrays.

		String[] message = new String[] {msg.toLowerCase()};
		boolean IsmessageIsPositive = false;
		for(String ms: message){
			for(String words : positivewords){

				if(ms.equals(words)){
					IsmessageIsPositive = true;
				}
			}
		}

		if(IsmessageIsPositive){
			calculateTotalPositiveMsg();
		}

	}
	public void calculateTotalPositiveMsg() {

		totalPossitiveMessages++;

	}
	public String getTotalPositivePercent(){
		
		if(totalMessages != 0){
			totalPositivePercent = (totalPossitiveMessages/totalMessages)*100;
		}
		else totalPositivePercent = 0;
			
//		return formatter.format(totalPositivePercent);
		return formatter.format(totalPositivePercent);

	}

	public int getTotalUsers() {
		return totalUsers;
	}

	public int getTotalMessages() {
		return totalMessages;
	}

	public int getTotalGroupUsers() {
		return totalGroupUsers;
	}
	
	public int getTotalPossitiveMessages() {
		return totalPossitiveMessages;
	}



}
