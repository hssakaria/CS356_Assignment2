import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import javax.swing.border.Border;

/****************************************************
 * UserTwitterUI contains a singleton design pattern.
 ****************************************************/
public class UserTwitterUI {
	
	private static UserTwitterUI instance = null;

	private JFrame frame;
	private JPanel mainPanel;
	private JPanel panel1;
	private JPanel panel2;
	private JPanel panel3;
	private JPanel panel4;
	private JPanel panel5;
	private JButton followUserBtn;
	private JButton postTweetBtn;
	private JTextField userIDTextField;
	private JTextArea tweetMsgTA;
	private JLabel userIDLabel;
	private JLabel TweetMsgLabel;

	private static  String userId;
	/*****************************************************
	 * Launch the application.
	 * @param userID 
	 *****************************************************/
	public void UserTwitter(String userId) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					UserTwitterUI window = new UserTwitterUI(userId);
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	/****************************************************
	 * Return single Instance of a class "UserTwitterUI"
	 * @param userId 
	 ****************************************************/
	public static UserTwitterUI getUserTwitterInstance(){
		if(instance == null){
			instance  = new UserTwitterUI(userId);
		}
		return instance;
	}

	/****************************************************
	 * Create the application.
	 ****************************************************/
	public UserTwitterUI(String userId){

		initialize(userId);
		this.userId = userId;
	}
//	public UserTwitterUI(String userId) {
//		this.setUserId(userId);
//	}

	/****************************************************
	 * Initialize the contents of the frame.
	 ****************************************************/
	private void initialize(String userId) {
		
		Border border = BorderFactory.createLineBorder(Color.BLACK);

		
		frame = new JFrame("UserId   " + userId);
		frame.setSize(400, 450);
		
			//mainPanel = new JPanel(new GridLayout(4,1));
			mainPanel = new JPanel(new FlowLayout());
			mainPanel.setBackground(Color.CYAN);
			mainPanel.setBorder(BorderFactory.createLineBorder(Color.gray,10));
			

			/*****************************************************
			 * panel 1 - contains userIDTA and followerBTN
			 * 			 and added to mainPanel
			 ****************************************************/
				panel1 = new JPanel(new FlowLayout());
					panel1.setOpaque(true);
					panel1.setBackground(Color.darkGray);
					
						userIDLabel = new JLabel();
						userIDLabel.setText("UserID:" );
						userIDLabel.setForeground(Color.cyan);
						userIDTextField = new JTextField(15);
						
						userIDTextField.setFont(new Font("Microsoft Sans Serif", Font.PLAIN, 13));
						userIDTextField.setForeground(Color.darkGray);
						userIDTextField.setBorder(BorderFactory.createCompoundBorder(border, 
					            BorderFactory.createEmptyBorder(10, 10, 10, 10)));
						userIDTextField.setFocusable(true);
						
						
						
						followUserBtn = new JButton();
						followUserBtn.setText("Follow User");
						followUserBtn.setForeground(Color.BLACK);
						followUserBtn.setPreferredSize(new Dimension(120,45));
						
						/*****************************************************************************
						 * Follow User Button ActionListener
						 *****************************************************************************/
						
						followUserBtn.addActionListener(new ActionListener(){

							@Override
							public void actionPerformed(ActionEvent e) {

								String	id = userIDTextField.getText();
								if(!id.equals("")){
									
									
									
									// do something
									
									
									
									
									userIDTextField.setText("");
								}
								else{
									
									JOptionPane.showMessageDialog(frame, "Please enter UseID.",	
											"Warning", JOptionPane.WARNING_MESSAGE);
								}
								
								
							}
							
						});
						
						
					panel1.add(userIDLabel);	
					panel1.add(userIDTextField);	
					panel1.add(followUserBtn);	
				
//			mainPanel.add(panel1, BorderLayout.NORTH);
			mainPanel.add(panel1);

			/*****************************************************
			 * panel 2 - contains  current followers ListView
			 * 			 and added to mainPanel.
			 ****************************************************/
				
				panel2 = new JPanel();
					panel2.setBackground(Color.darkGray);
					panel2.setOpaque(true);
					panel2.setPreferredSize(new Dimension(400,200));
				
					  	DefaultListModel followerModel = new DefaultListModel();
					  	JList followersListView = new JList(followerModel);
					  	JScrollPane followersSP = new JScrollPane(followersListView);
						
//					  	for(int i=0; i<6; i++){
//					  		followerModel.addElement("List " + i);
//					  	}
						
					panel2.add(followersListView);
			
			mainPanel.add(panel2, BorderLayout.CENTER);
//			mainPanel.add(panel2);	
			/*****************************************************
			 * panel 3 - contains TweetMsgTA and PostTweetBTN
			 * 			 and added to mainPanel.
			 ****************************************************/
				panel3 = new JPanel(new FlowLayout());
					panel3.setBackground(Color.darkGray);
				
				
				
						tweetMsgTA = new JTextArea();
						tweetMsgTA.setLineWrap(true);
				        tweetMsgTA.setWrapStyleWord(true);
						tweetMsgTA.setText("Tweet Message");
						tweetMsgTA.setBackground(Color.cyan);
						tweetMsgTA.setForeground(Color.BLACK);
						tweetMsgTA.setBorder(BorderFactory.createCompoundBorder(border, 
					            BorderFactory.createEmptyBorder(2,2,2,2)));
						
					panel3.add(tweetMsgTA);	
				
				
			mainPanel.add(panel3, BorderLayout.CENTER);
			/*****************************************************
			 * panel 4 - contains PostTweetBTNand added to mainPanel.
			 ****************************************************/
				panel4 = new JPanel();
					//panel3.setBackground(Color.cyan);
				
				
						postTweetBtn = new JButton();
						postTweetBtn.setText("Post Tweet");
						postTweetBtn.setForeground(Color.BLACK);
						
					
					panel4.add(postTweetBtn, BorderLayout.EAST);
					
				mainPanel.add(panel4);
					
			/*****************************************************
			 * panel 5 - contains userIDTA and followerBTN
			 * 			and added to mainPanel.
			 ****************************************************/	
				panel5 = new JPanel();
					panel5.setBackground(Color.darkGray);
					panel5.setOpaque(true);
					panel5.setPreferredSize(new Dimension(400,200));
			
				  	DefaultListModel newsFeedModel = new DefaultListModel();
				  	 JList newsFeedListView = new JList(newsFeedModel);
				  	 JScrollPane newsFeedSP = new JScrollPane( newsFeedListView);
					
				  	for(int i=0; i<12; i++){
				  		newsFeedModel.addElement("News " + i);
				  	}
				
				panel5.add( newsFeedListView);
			mainPanel.add(panel5);
		
					
		
		
		
		
		
		
	
		
		
		
		
		frame.add(mainPanel);
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}
	
	
	
	/*****************************
	 * Accessor methods for UserID
	 * @return
	 ******************************/
	
	public String getUserId() {
		return userId;
	}
	public void setUserId(String userId) {
		this.userId = userId;
	}

}
